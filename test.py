data = {'model': 'llama3', 'created_at': '2024-06-25T18:23:30.866746387Z', 'message': {'role': 'assistant', 'content': "I'll analyze the plan and observations step-by-step to verify consistency within the logistics domain.\n\n**Time Step 0:**\nThe robot starts at location A. The observation is that there is no package at location A, which matches the expected state.\n\n**Time Step 1:**\nThe robot moves from location A to location B. The precondition for Move is met (location B is adjacent to A). The effect of the action is that the robot's new location is B. The observation is that packet 1 is at location B, which matches the expected outcome after loading a package.\n\n**Time Step 2:**\nThe robot picks up packet 1 at location B. The precondition for Load is met (packet 1 is at the current location). The effect of the action is that the robot picks up the packet. No observation is made as sensing only occurs when the robot moves to a new location.\n\n**Time Step 3:**\nThe robot moves from location B to location C. The precondition for Move is met (location C is adjacent to B). The effect of the action is that the robot's new location is C. The observation is that there is no package at location C, which matches the expected state after releasing a package.\n\n**Time Step 4:**\nThe robot releases packet 1 at location C. The precondition for Release is met (the robot is carrying a packet). The effect of the action is that the robot places the packet at the current location. The observation is not relevant as sensing only occurs when the robot moves to a new location.\n\n**Time Step 5:**\nThe robot moves from location C to location B. The precondition for Move is met (location B is adjacent to C). The effect of the action is that the robot's new location is B. The observation is that packet 1 is at location B, which matches the expected state after moving back to a location where the package was previously located.\n\n**Time Step 6:**\nThe robot moves from location B to location A. The precondition for Move is met (location A is adjacent to B). The effect of the action is that the robot's new location is A. The observation is that there is no package at location A, which matches the expected state after releasing a package.\n\nAfter analyzing each time step, I found no inconsistencies between the plan and observations within the logistics domain. Therefore, I conclude:\n\n**INCONSISTENT**\n\nThe plan and observations are consistent, indicating that the robot's actions and movements align with the expected outcomes in the logistics domain."}, 'done_reason': 'stop', 'done': True, 'total_duration': 118024573610, 'load_duration': 1084613, 'prompt_eval_duration': 294158000, 'eval_count': 517, 'eval_duration': 117591424000}

def find_consistent(data):
    content = data['message']['content']
    if "**CONSISTENT**" in content:
        return True
    if "**INCONSISTENT**" in content:
        return False


consistent_found = find_consistent(data)
print(consistent_found)  # This will print True
